[
  {
    "objectID": "DataPrep.html",
    "href": "DataPrep.html",
    "title": "Data Preparation",
    "section": "",
    "text": "Code\nimport pandas as pd\nimport numpy as np\nCode\ndf = pd.read_csv(\"data/WA_Fn-UseC_-Telco-Customer-Churn.csv\")\nCode\ndf.head()\n\n\n\n\n\n\n\n\n\ncustomerID\ngender\nSeniorCitizen\nPartner\nDependents\ntenure\nPhoneService\nMultipleLines\nInternetService\nOnlineSecurity\n...\nDeviceProtection\nTechSupport\nStreamingTV\nStreamingMovies\nContract\nPaperlessBilling\nPaymentMethod\nMonthlyCharges\nTotalCharges\nChurn\n\n\n\n\n0\n7590-VHVEG\nFemale\n0\nYes\nNo\n1\nNo\nNo phone service\nDSL\nNo\n...\nNo\nNo\nNo\nNo\nMonth-to-month\nYes\nElectronic check\n29.85\n29.85\nNo\n\n\n1\n5575-GNVDE\nMale\n0\nNo\nNo\n34\nYes\nNo\nDSL\nYes\n...\nYes\nNo\nNo\nNo\nOne year\nNo\nMailed check\n56.95\n1889.5\nNo\n\n\n2\n3668-QPYBK\nMale\n0\nNo\nNo\n2\nYes\nNo\nDSL\nYes\n...\nNo\nNo\nNo\nNo\nMonth-to-month\nYes\nMailed check\n53.85\n108.15\nYes\n\n\n3\n7795-CFOCW\nMale\n0\nNo\nNo\n45\nNo\nNo phone service\nDSL\nYes\n...\nYes\nYes\nNo\nNo\nOne year\nNo\nBank transfer (automatic)\n42.30\n1840.75\nNo\n\n\n4\n9237-HQITU\nFemale\n0\nNo\nNo\n2\nYes\nNo\nFiber optic\nNo\n...\nNo\nNo\nNo\nNo\nMonth-to-month\nYes\nElectronic check\n70.70\n151.65\nYes\n\n\n\n\n5 rows Ã— 21 columns\nCode\ndf.info()\n\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 7043 entries, 0 to 7042\nData columns (total 21 columns):\n #   Column            Non-Null Count  Dtype  \n---  ------            --------------  -----  \n 0   customerID        7043 non-null   object \n 1   gender            7043 non-null   object \n 2   SeniorCitizen     7043 non-null   int64  \n 3   Partner           7043 non-null   object \n 4   Dependents        7043 non-null   object \n 5   tenure            7043 non-null   int64  \n 6   PhoneService      7043 non-null   object \n 7   MultipleLines     7043 non-null   object \n 8   InternetService   7043 non-null   object \n 9   OnlineSecurity    7043 non-null   object \n 10  OnlineBackup      7043 non-null   object \n 11  DeviceProtection  7043 non-null   object \n 12  TechSupport       7043 non-null   object \n 13  StreamingTV       7043 non-null   object \n 14  StreamingMovies   7043 non-null   object \n 15  Contract          7043 non-null   object \n 16  PaperlessBilling  7043 non-null   object \n 17  PaymentMethod     7043 non-null   object \n 18  MonthlyCharges    7043 non-null   float64\n 19  TotalCharges      7043 non-null   object \n 20  Churn             7043 non-null   object \ndtypes: float64(1), int64(2), object(18)\nmemory usage: 1.1+ MB"
  },
  {
    "objectID": "DataPrep.html#missing-values",
    "href": "DataPrep.html#missing-values",
    "title": "Data Preparation",
    "section": "Missing Values",
    "text": "Missing Values\n\n\nCode\n# check for missing values\ndf.isnull().sum()\n\n\ncustomerID          0\ngender              0\nSeniorCitizen       0\nPartner             0\nDependents          0\ntenure              0\nPhoneService        0\nMultipleLines       0\nInternetService     0\nOnlineSecurity      0\nOnlineBackup        0\nDeviceProtection    0\nTechSupport         0\nStreamingTV         0\nStreamingMovies     0\nContract            0\nPaperlessBilling    0\nPaymentMethod       0\nMonthlyCharges      0\nTotalCharges        0\nChurn               0\ndtype: int64"
  },
  {
    "objectID": "DataPrep.html#data-types",
    "href": "DataPrep.html#data-types",
    "title": "Data Preparation",
    "section": "Data Types",
    "text": "Data Types\n\n\nCode\ndf.dtypes\n\n\ncustomerID           object\ngender               object\nSeniorCitizen         int64\nPartner              object\nDependents           object\ntenure                int64\nPhoneService         object\nMultipleLines        object\nInternetService      object\nOnlineSecurity       object\nOnlineBackup         object\nDeviceProtection     object\nTechSupport          object\nStreamingTV          object\nStreamingMovies      object\nContract             object\nPaperlessBilling     object\nPaymentMethod        object\nMonthlyCharges      float64\nTotalCharges         object\nChurn                object\ndtype: object\n\n\n\n\nCode\n# convert total charges to float\ndf['TotalCharges'] = pd.to_numeric(df['TotalCharges'], errors='coerce')\n\n\n\n\nCode\n# convert binary columns and multi-class service columns to category\ncat_cols = ['gender', 'SeniorCitizen', 'Partner', 'Dependents', 'PhoneService',\n            'MultipleLines', 'InternetService', 'OnlineSecurity', 'OnlineBackup',\n            'DeviceProtection', 'TechSupport', 'StreamingTV', 'StreamingMovies',\n            'Contract', 'PaperlessBilling', 'PaymentMethod', 'Churn']\n\nfor col in cat_cols:\n    df[col] = df[col].astype('category')\n\n\n\n\nCode\ndf.dtypes\n\n\ncustomerID            object\ngender              category\nSeniorCitizen       category\nPartner             category\nDependents          category\ntenure                 int64\nPhoneService        category\nMultipleLines       category\nInternetService     category\nOnlineSecurity      category\nOnlineBackup        category\nDeviceProtection    category\nTechSupport         category\nStreamingTV         category\nStreamingMovies     category\nContract            category\nPaperlessBilling    category\nPaymentMethod       category\nMonthlyCharges       float64\nTotalCharges         float64\nChurn               category\ndtype: object\n\n\n\n\nCode\n# check for na values\ndf.isna().sum()\n\n\ncustomerID           0\ngender               0\nSeniorCitizen        0\nPartner              0\nDependents           0\ntenure               0\nPhoneService         0\nMultipleLines        0\nInternetService      0\nOnlineSecurity       0\nOnlineBackup         0\nDeviceProtection     0\nTechSupport          0\nStreamingTV          0\nStreamingMovies      0\nContract             0\nPaperlessBilling     0\nPaymentMethod        0\nMonthlyCharges       0\nTotalCharges        11\nChurn                0\ndtype: int64\n\n\n\n\nCode\nprint(df[df['TotalCharges'].isna()])\n\n\n      customerID  gender SeniorCitizen Partner Dependents  tenure  \\\n488   4472-LVYGI  Female             0     Yes        Yes       0   \n753   3115-CZMZD    Male             0      No        Yes       0   \n936   5709-LVOEQ  Female             0     Yes        Yes       0   \n1082  4367-NUYAO    Male             0     Yes        Yes       0   \n1340  1371-DWPAZ  Female             0     Yes        Yes       0   \n3331  7644-OMVMY    Male             0     Yes        Yes       0   \n3826  3213-VVOLG    Male             0     Yes        Yes       0   \n4380  2520-SGTTA  Female             0     Yes        Yes       0   \n5218  2923-ARZLG    Male             0     Yes        Yes       0   \n6670  4075-WKNIU  Female             0     Yes        Yes       0   \n6754  2775-SEFEE    Male             0      No        Yes       0   \n\n     PhoneService     MultipleLines InternetService       OnlineSecurity  ...  \\\n488            No  No phone service             DSL                  Yes  ...   \n753           Yes                No              No  No internet service  ...   \n936           Yes                No             DSL                  Yes  ...   \n1082          Yes               Yes              No  No internet service  ...   \n1340           No  No phone service             DSL                  Yes  ...   \n3331          Yes                No              No  No internet service  ...   \n3826          Yes               Yes              No  No internet service  ...   \n4380          Yes                No              No  No internet service  ...   \n5218          Yes                No              No  No internet service  ...   \n6670          Yes               Yes             DSL                   No  ...   \n6754          Yes               Yes             DSL                  Yes  ...   \n\n         DeviceProtection          TechSupport          StreamingTV  \\\n488                   Yes                  Yes                  Yes   \n753   No internet service  No internet service  No internet service   \n936                   Yes                   No                  Yes   \n1082  No internet service  No internet service  No internet service   \n1340                  Yes                  Yes                  Yes   \n3331  No internet service  No internet service  No internet service   \n3826  No internet service  No internet service  No internet service   \n4380  No internet service  No internet service  No internet service   \n5218  No internet service  No internet service  No internet service   \n6670                  Yes                  Yes                  Yes   \n6754                   No                  Yes                   No   \n\n          StreamingMovies  Contract PaperlessBilling  \\\n488                    No  Two year              Yes   \n753   No internet service  Two year               No   \n936                   Yes  Two year               No   \n1082  No internet service  Two year               No   \n1340                   No  Two year               No   \n3331  No internet service  Two year               No   \n3826  No internet service  Two year               No   \n4380  No internet service  Two year               No   \n5218  No internet service  One year              Yes   \n6670                   No  Two year               No   \n6754                   No  Two year              Yes   \n\n                  PaymentMethod MonthlyCharges  TotalCharges  Churn  \n488   Bank transfer (automatic)          52.55           NaN     No  \n753                Mailed check          20.25           NaN     No  \n936                Mailed check          80.85           NaN     No  \n1082               Mailed check          25.75           NaN     No  \n1340    Credit card (automatic)          56.05           NaN     No  \n3331               Mailed check          19.85           NaN     No  \n3826               Mailed check          25.35           NaN     No  \n4380               Mailed check          20.00           NaN     No  \n5218               Mailed check          19.70           NaN     No  \n6670               Mailed check          73.35           NaN     No  \n6754  Bank transfer (automatic)          61.90           NaN     No  \n\n[11 rows x 21 columns]\n\n\n\n\nCode\n# unique tenure values where the total charges are NaN\nunique_tenure_missing_total = df[df['TotalCharges'].isna()]['tenure'].unique()\nprint(unique_tenure_missing_total)\n\n\n[0]\n\n\n\n\nCode\n# since the total charges are NaN for tenure = 0\n# we can safely drop these rows\ndf = df[df['TotalCharges'].notna()].copy()\n\n\n\n\nCode\ndf.isna().sum()\n\n\ncustomerID          0\ngender              0\nSeniorCitizen       0\nPartner             0\nDependents          0\ntenure              0\nPhoneService        0\nMultipleLines       0\nInternetService     0\nOnlineSecurity      0\nOnlineBackup        0\nDeviceProtection    0\nTechSupport         0\nStreamingTV         0\nStreamingMovies     0\nContract            0\nPaperlessBilling    0\nPaymentMethod       0\nMonthlyCharges      0\nTotalCharges        0\nChurn               0\ndtype: int64\n\n\n\n\nCode\n# check for duplicate rows\nprint(df.duplicated().sum())\n\n\n0\n\n\n\n\nCode\n# drop un-necessary columns \n# since customer id does not add any value for our analysis - we will drop it\ndf = df.drop(columns=['customerID'])\n\n\n\n\nCode\ndf.to_csv(\"data/churn_data.csv\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Survival Analysis",
    "section": "",
    "text": "Nandini Kodali\n\nWith a strong foundation in mathematics and computation, I bring an analytical mindset to solving complex data problems.\nIâ€™m currently pursuing a Masterâ€™s in Data Science and Analytics at Georgetown University, after my BTech in Computation and Mathematics at Mahindra University, India.\nMy early interest in business analytics sparked my journey into data science, where Iâ€™ve since developed skills across the full pipeline â€” from building ETL pipelines and developing predictive models to designing impactful visualizations. Iâ€™ve worked on several machine learning and deep learning projects, and my academic path has led me to explore advanced domains like computer vision, generative image modeling, and natural language processing.\nIâ€™m now focused on applying this technical skillset across diverse areas, leveraging both statistical rigor and creative experimentation.\n\n\n\n  Website \n  GitHub \n  LinkedIn \n  Resume"
  }
]